# Ruby
# Package your Ruby project.
# Add steps that install rails, analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/ruby

name: '$(SourceBranchName)-$(Build.SourceVersion) Build-$(Build.BuildId)'

trigger:
  batch: true
  branches:
    include:
      - master
  tags:
    include:
    - v*


pr:
  autoCancel: true
  branches:
    include:
      - master
      - feature/*

variables:
  application.name: 'tt-uploader'
  azure.subscription.endpoint: 'hmcts-pet'
  manual.branch.prefix: 'master'
  azure.container.registry: 'employmenttribunal.azurecr.io'

# resources:
  # containers:
  # - container: my_container
  #   image: ubuntu:16.04

jobs:

  - job: TestApplication

    pool:
      vmImage: 'Ubuntu-16.04'

    variables:
      rubyVersion: '= 2.7.3'
      bundlerVersion: '2.2.4'

    steps:
    # - template: ./pipeline-steps/test-application.yaml
    - template: ./pipeline-steps/publish-tests.yaml


  - job: BuildAndPushImageCI

    dependsOn: TestApplication
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'), not(startsWith(variables['Build.SourceBranch'], 'refs/tags/')), ne(variables['Build.Reason'], 'Manual'))
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - template: ./pipeline-steps/docker-build.yaml
      parameters:
        azureContainerRegistry: $(azure.container.registry)
        azureSubscriptionEndpoint: $(azure.subscription.endpoint)
        applicationName: $(application.name)


  - job: BuildAndPushImageRelease

    dependsOn: TestApplication
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - template: ./pipeline-steps/docker-build-release.yaml
      parameters:
        azureContainerRegistry: $(azure.container.registry)
        azureSubscriptionEndpoint: $(azure.subscription.endpoint)
        applicationName: $(application.name)


  - job: BuildAndPushImageManual

    dependsOn: TestApplication
    condition: and(succeeded(), eq(variables['Build.Reason'], 'Manual'))
    pool:
      vmImage: 'Ubuntu-16.04'

    steps:
    - template: ./pipeline-steps/docker-build-manual.yaml
      parameters:
        azureContainerRegistry: $(azure.container.registry)
        azureSubscriptionEndpoint: $(azure.subscription.endpoint)
        manualBranchPrefix: $(manual.branch.prefix)
        applicationName: $(application.name)
